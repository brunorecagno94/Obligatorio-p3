// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Obligatorio.Infraestructura.AccesoDatos.EF;

#nullable disable

namespace Obligatorio.Infraestructura.Migrations
{
    [DbContext(typeof(ObligatorioContext))]
    [Migration("20250519013326_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Agencias");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Envio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Envios");

                    b.HasDiscriminator().HasValue("Envio");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.LogCrud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccionRealizada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaOperacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LogCrud");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator().HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.EnvioComun", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Envio");

                    b.Property<int>("AgenciaId")
                        .HasColumnType("int");

                    b.HasIndex("AgenciaId");

                    b.HasDiscriminator().HasValue("EnvioComun");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.EnvioUrgente", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Envio");

                    b.HasDiscriminator().HasValue("EnvioUrgente");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Cliente", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Empleado", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Administrador", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Empleado");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Funcionario", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Empleado");

                    b.HasDiscriminator().HasValue("Funcionario");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.Direccion", "Direccion", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Calle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Calle");

                            b1.Property<string>("CodigoPostal")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CodigoPostal");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.Ubicacion", "Ubicacion", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<float>("Latitud")
                                .HasColumnType("real")
                                .HasColumnName("Latitud");

                            b1.Property<float>("Longitud")
                                .HasColumnType("real")
                                .HasColumnName("Longitud");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.Navigation("Direccion")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Ubicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Envio", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("Obligatorio.LogicaNegocio.VO.Comentario", "ListaComentario", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime>("Fecha")
                                .HasColumnType("datetime2")
                                .HasColumnName("FechaComentario");

                            b1.Property<int>("IdEmpleado")
                                .HasColumnType("int")
                                .HasColumnName("IdEmpleado");

                            b1.Property<int>("IdEnvio")
                                .HasColumnType("int")
                                .HasColumnName("IdEnvio");

                            b1.Property<string>("TextoComentario")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("TextoComentario");

                            b1.HasKey("EnvioId", "Id");

                            b1.ToTable("Comentario");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.Estado", "Estado", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Estado");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.NumeroTracking", "NumeroTracking", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("NumeroTracking");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.PesoPaquete", "PesoPaquete", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<float>("Value")
                                .HasColumnType("real")
                                .HasColumnName("PesoPaquete");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("Estado")
                        .IsRequired();

                    b.Navigation("ListaComentario");

                    b.Navigation("NumeroTracking")
                        .IsRequired();

                    b.Navigation("PesoPaquete")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.LogCrud", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.Apellido", "Apellido", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Apellido");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.Cedula", "Cedula", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cedula");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.Contrasena", "Contrasena", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Contrasena");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.Email", "Email", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.Telefono", "Telefono", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Telefono");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Apellido")
                        .IsRequired();

                    b.Navigation("Cedula")
                        .IsRequired();

                    b.Navigation("Contrasena")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Telefono")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.EnvioComun", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Agencia", "Agencia")
                        .WithMany()
                        .HasForeignKey("AgenciaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agencia");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.EnvioUrgente", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.Direccion", "Direccion", b1 =>
                        {
                            b1.Property<int>("EnvioUrgenteId")
                                .HasColumnType("int");

                            b1.Property<string>("Calle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Calle");

                            b1.Property<string>("CodigoPostal")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CodigoPostal");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.HasKey("EnvioUrgenteId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioUrgenteId");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.VO.EntregaEficiente", "EntregaEficiente", b1 =>
                        {
                            b1.Property<int>("EnvioUrgenteId")
                                .HasColumnType("int");

                            b1.Property<bool>("Value")
                                .HasColumnType("bit")
                                .HasColumnName("EntregaEficiente");

                            b1.HasKey("EnvioUrgenteId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioUrgenteId");
                        });

                    b.Navigation("Direccion")
                        .IsRequired();

                    b.Navigation("EntregaEficiente")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
